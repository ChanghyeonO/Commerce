name: Auto-deploy

# 'main' 브랜치에 푸시될 때 워크플로우를 실행
on:
  push:
    branches:
      - main
    paths:
      - "FrontEnd/**"

# 작업 정의
jobs:
  build:
    # 이 작업은 우분투 최신 버전에서 실행
    runs-on: ubuntu-latest

    steps:
      # 1단계: 레포지토리 코드 체크아웃
      - name: Checkout source code
        uses: actions/checkout@v2

      # 2단계: 우분투 버전을 확인 (선택)
      - name: Check Ubuntu version
        run: lsb_release -a

      # 3단계: 환경 변수 파일 생성
      - name: Create env file
        run: |
          touch .env
          echo VITE_FIREBASE_API_KEY=${{ secrets.VITE_FIREBASE_API_KEY }} >> .env
          echo VITE_FIREBASE_AUTH_DOMAIN=${{ secrets.VITE_FIREBASE_AUTH_DOMAIN }} >> .env
          echo VITE_FIREBASE_PROJECT_ID=${{ secrets.VITE_FIREBASE_PROJECT_ID }} >> .env
          echo VITE_FIREBASE_STORAGE_BUCKET=${{ secrets.VITE_FIREBASE_STORAGE_BUCKET }} >> .env
          echo VITE_FIREBASE_MESSAGING_SENDER_ID=${{ secrets.VITE_FIREBASE_MESSAGING_SENDER_ID }} >> .env
          echo VITE_FIREBASE_APP_ID=${{ secrets.VITE_FIREBASE_APP_ID }} >> .env
          echo VITE_SHOPPINGMALL_ID=${{ secrets.VITE_SHOPPINGMALL_ID }} >> .env
          cat .env

      # 4단계: 프로젝트 의존성을 설치
      - name: Install dependencies
        run: cd FrontEnd && npm install

      # 5단계: 프로젝트를 빌드
      - name: Build
        run: cd FrontEnd && npm run build

      # 6단계: AWS CLI 버전 표시(선택)
      - name: SHOW AWS CLI VERSION
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: aws --version

      # 7단계: 빌드 파일을 S3 버킷에 동기화.
      - name: Sync Bucket
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          cd FrontEnd
           aws s3 sync \
           --region ap-northeast-2\
           ./dist s3://funditdeploy\
           --delete
